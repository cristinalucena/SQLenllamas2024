-- ¿Cuántos pedidos y cuántas pizzas se han entregado con éxito por cada runner, cuál es su porcentaje de éxito de cada runner?
-- ¿Qué porcentaje de las pizzas entregadas tenía modificaciones?

-- CREAMOS DOS TABLAS TEMPORALES CON LOS CAMPOS LIMPIOS
CREATE OR REPLACE TEMPORARY TABLE T_CUSTOMER_ORDERS AS
SELECT 
    ORDER_ID
    ,CUSTOMER_ID
    ,PIZZA_ID
    ,REPLACE(COALESCE(EXCLUSIONS,''),'null','') AS EXCLUSIONS
    ,REPLACE(COALESCE(EXTRAS,''),'null','') AS EXTRAS
    ,ORDER_TIME
FROM CUSTOMER_ORDERS;

-- INCLUIMOS EN ESTA TABLA A TODOS LOS CORREDORES, HAYAN HECHO O NO UN PEDIDO
CREATE OR REPLACE TEMPORARY TABLE T_RUNNER_ORDERS AS
SELECT
    ORDER_ID
    ,R.RUNNER_ID
    ,PICKUP_TIME
    ,DISTANCE
    ,DURATION
    ,REPLACE(COALESCE(CANCELLATION,''),'null','') AS CANCELLATION
FROM RUNNER_ORDERS RO
    RIGHT JOIN RUNNERS R
    ON RO.RUNNER_ID = R.RUNNER_ID
;

-- SQL
-- ____________________________________________________________________________________
WITH MODIFICACIONES_CTE AS(
    SELECT
        ORDER_ID
        , PIZZA_ID
        , SUM(CASE WHEN EXCLUSIONS !='' THEN 1 ELSE 0 END) AS EXCLUSIONS_CLEAN
        , SUM(CASE WHEN EXTRAS !='' THEN 1 ELSE 0 END) AS EXTRAS_CLEAN
        , CASE WHEN EXCLUSIONS_CLEAN + EXTRAS_CLEAN > 0 THEN 1 ELSE 0 END AS MODIFICACIONES
            FROM T_CUSTOMER_ORDERS
        GROUP BY PIZZA_ID, ORDER_ID
), N_PIZZAS_PEDIDO AS(
    SELECT
        ORDER_ID
        , COUNT(PIZZA_ID) AS NUM_PIZZAS
        , SUM(MODIFICACIONES) AS MODIFICACIONES
    FROM MODIFICACIONES_CTE
        GROUP BY ORDER_ID
),N_PIZZAS_PEDIDO_EXITO AS(
    SELECT
        NPP.ORDER_ID
        ,RUNNER_ID
        ,NUM_PIZZAS
        , CASE 
            WHEN MODIFICACIONES>1 THEN 1
            WHEN MODIFICACIONES = 1 THEN 1
            ELSE 0
        END AS MODIFICACIONES        
    FROM T_RUNNER_ORDERS TRO
        LEFT JOIN N_PIZZAS_PEDIDO NPP
            ON NPP.ORDER_ID = TRO.ORDER_ID
    WHERE 
        CANCELLATION != 'Restaurant Cancellation' AND
        CANCELLATION != 'Customer Cancellation'
    ORDER BY RUNNER_ID
)

SELECT 
    PER.RUNNER_ID
    ,IFNULL(SUM(NUM_PIZZAS),0) "NUM PIZZAS ENTREGADAS CON ÉXITO"
    ,ROUND(COUNT(ORDER_ID)*100/(SELECT COUNT(DISTINCT ORDER_ID) FROM T_CUSTOMER_ORDERS),2) AS "PORCENTAJE DE ÉXITO"
    ,IFNULL(ROUND(SUM(MODIFICACIONES)*100/(SELECT COUNT(MODIFICACIONES) FROM N_PIZZAS_PEDIDO WHERE MODIFICACIONES != 0),2),0) AS "PORCENTAJE DE MODIFICACIONES"
FROM N_PIZZAS_PEDIDO_EXITO PER
GROUP BY PER.RUNNER_ID
ORDER BY RUNNER_ID
;
