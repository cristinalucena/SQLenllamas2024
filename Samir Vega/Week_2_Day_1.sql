-----------------------------------------------------LIMPIEZA DE TABLAS-----------------------------------------------------------------------
CREATE OR REPLACE TEMP TABLE ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.CUSTOMER_ORDERS_CLEAN AS
    SELECT
        ORDER_ID,
        CUSTOMER_ID,
        PIZZA_ID,
        CASE
            WHEN TRIM(EXCLUSIONS) IN ('null', '') OR EXCLUSIONS IS NULL THEN NULL
            ELSE EXCLUSIONS
        END AS EXCLUSIONS,
        CASE
            WHEN TRIM(EXTRAS) IN ('null', '') OR EXTRAS IS NULL THEN NULL
            ELSE EXTRAS
        END AS EXTRAS,
        ORDER_TIME   
    FROM CUSTOMER_ORDERS;

CREATE OR REPLACE TEMP TABLE ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.RUNNER_ORDERS_CLEAN AS
    SELECT
        ORDER_ID,
        RUNNER_ID,
        PICKUP_TIME,
        DISTANCE,
        DURATION,
        CASE
            WHEN TRIM(CANCELLATION) IN ('null', '') OR CANCELLATION IS NULL THEN NULL
            ELSE 'CANCELED'
        END AS CANCELLATION   
    FROM RUNNER_ORDERS;

--------------------------------------------------------------DIA_1----------------------------------------------------------

SELECT
    A.RUNNER_ID,
    PEDIDOS_ENTREGADOS,
    PIZZAS_ENTREGADAS,
    CASE
        WHEN TOTAL_PEDIDOS != 0 THEN TRUNC((PEDIDOS_ENTREGADOS/TOTAL_PEDIDOS)*100,2)
        ELSE 0
    END AS PORCENTAJE_DE_EXITO,
    EXITO_DE_ENTREGA_EN_PIZZAS_MODIFICADAS
FROM (  SELECT 
            C.RUNNER_ID,
            COUNT(DISTINCT A.ORDER_ID) AS PEDIDOS_ENTREGADOS,
            COUNT(A.ORDER_ID) AS PIZZAS_ENTREGADAS
        FROM ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.CUSTOMER_ORDERS_CLEAN A
        RIGHT JOIN ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.RUNNER_ORDERS_CLEAN B
            ON A.ORDER_ID = B.ORDER_ID
        RIGHT JOIN RUNNERS C
            ON B.RUNNER_ID = C.RUNNER_ID
        WHERE CANCELLATION IS NULL
        GROUP BY C.RUNNER_ID) A
LEFT JOIN (    SELECT
                    RUNNER_ID,
                    COUNT(*) AS TOTAL_PEDIDOS
                FROM ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.RUNNER_ORDERS_CLEAN
                GROUP BY RUNNER_ID)B
ON A.RUNNER_ID = B.RUNNER_ID
INNER JOIN (SELECT
                B.RUNNER_ID,
                CASE
                    WHEN TOTAL_PIZZAS != 0 THEN TRUNC((PIZZAS_ENTREGADAS_MODIFICADAS/TOTAL_PIZZAS)*100,2)
                    ELSE 0
                END AS EXITO_DE_ENTREGA_EN_PIZZAS_MODIFICADAS
            FROM (  SELECT
                        RUNNER_ID,
                        COUNT(*) AS TOTAL_PIZZAS
                    FROM ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.CUSTOMER_ORDERS_CLEAN A
                    INNER JOIN ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.RUNNER_ORDERS_CLEAN B
                        ON A.ORDER_ID = B.ORDER_ID
                    GROUP BY RUNNER_ID) A
            INNER JOIN (SELECT
                            RUNNER_ID,
                            COUNT(*) AS PIZZAS_ENTREGADAS_MODIFICADAS
                        FROM ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.CUSTOMER_ORDERS_CLEAN A
                        INNER JOIN ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.RUNNER_ORDERS_CLEAN B
                            ON A.ORDER_ID = B.ORDER_ID
                        WHERE CANCELLATION IS NULL
                            AND (EXTRAS IS NOT NULL OR EXCLUSIONS IS NOT NULL)
                        GROUP BY RUNNER_ID) B
                ON A.RUNNER_ID = B.RUNNER_ID) C
ON A.RUNNER_ID = C.RUNNER_ID;