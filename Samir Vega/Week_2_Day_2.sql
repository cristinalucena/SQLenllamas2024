-----------------------------------------------------LIMPIEZA DE TABLAS-----------------------------------------------------------------------
CREATE OR REPLACE TEMP TABLE ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.CUSTOMER_ORDERS_CLEAN AS
    SELECT
        ORDER_ID,
        CUSTOMER_ID,
        PIZZA_ID,
        DECODE(EXCLUSIONS,'',NULL,'null',NULL,EXCLUSIONS) AS EXCLUSIONS,
        DECODE(EXTRAS,'',NULL,'null',NULL,EXTRAS) AS EXTRAS,
        ORDER_TIME   
    FROM CUSTOMER_ORDERS;

CREATE OR REPLACE TEMP TABLE ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.RUNNER_ORDERS_CLEAN AS
    SELECT
        ORDER_ID,
        RUNNER_ID,
        TRY_CAST(PICKUP_TIME AS TIMESTAMP) AS PICKUP_TIME,
        CAST(REPLACE(UPPER(DECODE(DISTANCE,'',NULL,'null',NULL,DISTANCE)), 'KM') AS DECIMAL(15,2)) AS DISTANCE_KM,
        TO_NUMBER(REGEXP_REPLACE(DECODE(DURATION,'',NULL,'null',NULL,DURATION), '[a-zA-Z]', ''))AS DURATION_MIN,
        CASE
            WHEN TRIM(CANCELLATION) IN ('null', '') OR CANCELLATION IS NULL THEN NULL
            ELSE 'CANCELED'
        END AS CANCELLATION   
    FROM RUNNER_ORDERS;

--------------------------------------------------------------DIA_2----------------------------------------------------------

SELECT
    B.RUNNER_ID,
    SUM(IFNULL(DISTANCE_KM,0)) AS TOTAL_DISTANCIA_KM,
    IFNULL(ROUND(AVG(DISTANCE_KM/(DURATION_MIN/60)), 2),0) AS VELOCIDAD_MEDIA_KM_H
FROM ESPECIALIDAD_SQL_BRONZE_DB_SVM.PRUEBAS.RUNNER_ORDERS_CLEAN A
RIGHT JOIN RUNNERS B
    ON A.RUNNER_ID = B.RUNNER_ID
GROUP BY B.RUNNER_ID;